<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- 添加注解支持 -->
    <context:annotation-config />

    <!-- 扫描server层包 -->
    <context:component-scan base-package="com.nick.service"></context:component-scan>
    <context:component-scan base-package="com.nick.bean"></context:component-scan>
    <context:component-scan base-package="com.nick.DAO"></context:component-scan>
    <!--<context:component-scan base-package="com.nick.controller"></context:component-scan>-->
    <!--<context:component-scan base-package="com.nick.DAO"></context:component-scan>-->
    <!--<context:component-scan base-package="com.nick.bean"></context:component-scan>-->

    <!-- 导入jdbc数据库连接信息的配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <bean  class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />


    <!-- 配置数据源 c3p0 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClassName}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>

        <property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
        <property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property>
        <property name="maxStatements" value="${jdbc.maxStatements}"></property>
        <property name="maxStatementsPerConnection" value="${jdbc.maxStatementsPerConnection}"></property>
        <property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.nick.bean" />
        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
    </bean>



    <!-- 配置事务管理,采用Hibernate4 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!-- 对数据源进行事务管理 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!--&lt;!&ndash; 配置事务传播属性,注意需要有事务管理(transaction-manager) : 其实就是事务(方法)发生的时间和要发生的故事&ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="add*" propagation="REQUIRED"/>-->
            <!--<tx:method name="save*" propagation="REQUIRED"/>-->
            <!--<tx:method name="insert*" propagation="REQUIRED"/>-->
            <!--<tx:method name="delete*" propagation="REQUIRED"/>-->
            <!--<tx:method name="update*" propagation="REQUIRED"/>-->
            <!--<tx:method name="find*" propagation="REQUIRED" read-only="true"/>-->
            <!--<tx:method name="load*" propagation="REQUIRED" read-only="true"/>-->
            <!--<tx:method name="query*" propagation="REQUIRED" read-only="true"/>-->
            <!--<tx:method name="*" propagation="REQUIRED"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<tx:annotation-driven transaction-manager="transactionManager" />-->
    <!--&lt;!&ndash; 配置事务切面,并关联事务的传播属性: 其实就是一个方法,只是这个方法是事务性的事务,它的发生不是随机的,而是具有时间,地点和该发生的故事的 &ndash;&gt;-->
    <!--<aop:config>-->

        <!--&lt;!&ndash; 切点: 其实就是告诉了地点 &ndash;&gt;-->
        <!--<aop:pointcut expression="execution( * com.nick.service..*Service.*(..))" id="pointCut"/>-->

        <!--&lt;!&ndash; 要执行那样的事务,那当然得需要通知,通知它什么时候发生,在哪里发生,发生啥事 &ndash;&gt;-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="pointCut"/>-->
    <!--</aop:config>-->


    <import resource="classpath:dao.xml"/>
    <!--<import resource="classpath:service.xml"/>-->
    <!--<import resource="classpath:controller.xml"/>-->



</beans>